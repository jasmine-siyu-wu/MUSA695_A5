coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
fill="#EC7E00", alpha = 0.4) +
geom_rect(aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
plotTheme <- function () {
font <- "mono"
theme_minimal() %+replace% # replace elements we want to see
theme(
## Grid elements
panel.grid.major= element_line(colour="#dddddd",size=.1), #element_blank(), #
panel.grid.minor = element_blank(),
#axis.line = element_line(colour="#D0D0D0",size=.2),
#axis.ticks = element_blank(),
## Text elements
plot.title = element_text(
family = font,
size = 13,
lineheight = 0.75,
color = "#222222",
face = 'bold',
hjust = 0.65,
vjust = 0,
margin = margin(l=10, t=10, b=20, unit="pt")),
#panel.background = element_rect(fill = "#eeeeee"),
plot.background = element_blank(),
plot.subtitle = element_text(
family = font,
size = 12,
color = "#222222"),
plot.caption = element_text(
family = font,
size = 9,
hjust = 1,
vjust = -1,
margin = margin(6, 0, 6, 0, "pt")),
axis.text = element_text(
family=font,
size = 10),
axis.title.y = element_text(
family = font,
color = "#222222",
face = 'bold',
size = 12,
hjust = 1,
#vjust = 1,
margin = margin(0, 6, 0, 6, "pt")),
axis.title.x = element_text(
family = font,
color = "#222222",
face = 'bold',
size = 12,
#hjust = 0,
margin = margin(6, 0, 6, 0, "pt")),
plot.margin = margin(.25,.25,.25,.25,"cm")
)
# legend often requires manual tweaking based on plot content so don't define it here
}
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
plotTheme <- function () {
font <- "sans"
theme_minimal() %+replace% # replace elements we want to see
theme(
## Grid elements
panel.grid.major= element_line(colour="#dddddd",size=.1), #element_blank(), #
panel.grid.minor = element_blank(),
#axis.line = element_line(colour="#D0D0D0",size=.2),
#axis.ticks = element_blank(),
## Text elements
plot.title = element_text(
family = font,
size = 13,
lineheight = 0.75,
color = "#222222",
face = 'bold',
hjust = 0.65,
vjust = 0,
margin = margin(l=10, t=10, b=20, unit="pt")),
#panel.background = element_rect(fill = "#eeeeee"),
plot.background = element_blank(),
plot.subtitle = element_text(
family = font,
size = 12,
color = "#222222"),
plot.caption = element_text(
family = font,
size = 9,
hjust = 1,
vjust = -1,
margin = margin(6, 0, 6, 0, "pt")),
axis.text = element_text(
family=font,
size = 10),
axis.title.y = element_text(
family = font,
color = "#222222",
face = 'bold',
size = 12,
hjust = 1,
#vjust = 1,
margin = margin(0, 6, 0, 6, "pt")),
axis.title.x = element_text(
family = font,
color = "#222222",
face = 'bold',
size = 12,
#hjust = 0,
margin = margin(6, 0, 6, 0, "pt")),
plot.margin = margin(.25,.25,.25,.25,"cm")
)
# legend often requires manual tweaking based on plot content so don't define it here
}
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
text_grob <- grobTree(richtext_grob("<span style='color:#FE6822;'>Travel time is a bigger disincentive for driver<br>training completing and young driver license for<br>teens in higher-income neighborhoods.</span>",
x=.47,  y=.17, hjust=0,
gp=gpar(col = "#222222", fontsize=11),
#box_gp = gpar(col = "white", fill = "white"),
padding = margin(.2,0,0,0,"in"))
)
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(4)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(4)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
ggplot(data = time_ind_mod_cont.long,
aes(x = travel_time, y = values, group = income)) +
geom_line(aes(linetype = income), linewidth=0.5) +
scale_linetype_manual(name = "Household Income (Quartile)",
values = c("dotted", "twodash",
"longdash", "solid"),
labels = c("Low", "Moderate", "High", "Very High")) +
# geom_hline(yintercept = 0.5, linetype = "longdash", color="#EC7E00", linewidth=1) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 0, xmax = 1, ymin = 0.15, ymax = 0.9),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_rect(data = time_ind_mod_cont.long[1, ], aes(xmin = 24, xmax = 25, ymin = 0.2, ymax = 0.5),
linetype = "longdash",linewidth=1, color = "#EC7E00",
fill="#EC7E00", alpha = 0.4) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(VeryHighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q4") %>% slice(3)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(HighIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q3") %>% slice(3)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.2,
color = "#000000", parse = T,
label = "bold(MedianIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q2") %>% slice(3)) +
geom_text(aes(y = values), hjust = -0.1, vjust = -0.4,
color = "#000000", parse = T,
label = "bold(LowIncome)",
data = time_ind_mod_cont.long %>% filter(income == "Q1") %>% slice(3)) +
labs(x = "Travel time (minutes)",
y = "Average probability",
caption = "Data source: Ohio Bureau of Motor Vehicles, U.S. Census Bureau ACS, Google Maps API | Jasmine Siyu Wu"
) +
coord_cartesian(ylim = c(0, 1)) +
plotTheme() +
theme(legend.position = "none") +
annotation_custom(
grob = text_grob,
xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)
knitr::opts_chunk$set(echo = TRUE)
#Loading Libraries
library(tidyverse)
library(knitr)
library(ggplot2)
library(grid)
library(gridExtra)
library(kableExtra)
library(dplyr)
library(ggtext)
library(gridtext)
library(giscoR)
library(sf)
library(tidycensus)
library(scales)
library(leaflet)
library(leaflet.extras)
library(leaflet.providers)
library(shiny)
library(lme4)
options(scipen=1)  #999
OH_tracts %>% st_transform(., 4326)  %>%
mutate(label = paste0("<b>", GEOID, ":</b> ", round(popDensity, digits = 2))) %>%
filter(!is.na(popDensity)) %>%
leaflet(.) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "transparent", weight = 0.1, opacity = 1,
fillColor = ~pal(popDensity), fillOpacity = 0.7,
label = ~lapply(label, HTML),
labelOptions = labelOptions(direction = "top"),
highlight = highlightOptions(
color = "#FFF", bringToFront = TRUE
)
) %>%
addLegend(
values = ~popDensity, opacity = 0.7,
pal = pal,
title = "Population density (/SqMi)",
position = "topright"
) %>%
addPolygons(data=OH_counties %>%
st_transform(., 4326) %>%
mutate(label = paste0("<b>", NAME, ":</b> ", estimate)),
color = "#555555", weight = 0.3, opacity = 1,
fillColor = "transparent", fillOpacity = 1,
label = ~lapply(label, HTML),
labelOptions = labelOptions(direction = "top"),
highlight = highlightOptions(
color = "#FFF", bringToFront = TRUE
)
) %>%
addPolygons(data=MSA_counties %>%
st_transform(., 4326)%>%
mutate(label = paste0("<b>", NAME, ":</b> ", estimate)),
color = "#EC7E00", weight = 0.8, opacity = 1,
fillColor = "transparent", fillOpacity = 1,
label = ~lapply(label, HTML),
labelOptions = labelOptions(direction = "top"),
highlight = highlightOptions(
color = "#FFF", bringToFront = TRUE
)
) %>%
addCircleMarkers(data= centers %>%
st_transform(., 4326)%>%
mutate(long = st_coordinates(.)[, 1],
lat = st_coordinates(.)[, 2],
label = Drv_S_N),
lng = ~long, lat = ~lat,
clusterOptions = markerClusterOptions(),
fillColor = "#EC7E00", fillOpacity = 1,
# fillColor = "transparent", fillOpacity = 1,
label = ~lapply(label, HTML),
labelOptions = labelOptions(direction = "top"),
)
